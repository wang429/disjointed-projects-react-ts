{"version":3,"sources":["clock/BarClock.tsx","logo.svg","home/defaultApp.tsx","TicTacToe/TicTacToe.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BarClock","props","interval","state","time","Date","setInterval","setState","currentHours","this","getHours","currentMins","getMinutes","currentSecs","getSeconds","ProgressBar","now","label","clearInterval","React","Component","DefaultApp","className","src","logo","alt","href","target","rel","Square","value","Board","i","renderSquare","Game","App","Nav","activeKey","Item","Link","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAgCeA,E,kDAzBX,WAAYC,GAAY,IAAD,8BACnB,cAAMA,IAHVC,cAEuB,EAEnB,EAAKC,MAAQ,CAAEC,KAAM,IAAIC,MACzB,EAAKH,SAAWI,aAAY,kBAAM,EAAKC,SAAS,CAAEH,KAAM,IAAIC,SAAW,KAHpD,E,0CAMvB,WACI,IAAIG,EAAeC,KAAKN,MAAMC,KAAKM,WAC/BC,EAAcF,KAAKN,MAAMC,KAAKQ,aAC9BC,EAAcJ,KAAKN,MAAMC,KAAKU,aAClC,OACI,gCACI,oCACA,cAACC,EAAA,EAAD,CAAaC,IAAKR,EAAe,GAAK,IAAKS,MAAOT,IAClD,cAACO,EAAA,EAAD,CAAaC,IAAKL,EAAc,GAAK,IAAKM,MAAON,IACjD,cAACI,EAAA,EAAD,CAAaC,IAAKH,EAAc,GAAK,IAAKI,MAAOJ,S,kCAK7D,WACIK,cAAcT,KAAKP,c,GAxBJiB,IAAMC,WCJd,MAA0B,iC,MCG1B,SAASC,IACpB,OACI,qBAAKC,UAAU,aAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,8B,UCLNC,E,4JACF,WACI,OACI,wBAAQP,UAAU,SAAlB,SACKb,KAAKR,MAAM6B,Y,GAJPX,IAAMC,WAUrBW,E,kKACF,SAAaC,GACX,OAAO,cAAC,EAAD,CAAQF,MAAOE,M,oBAGxB,WAGI,OACI,gCACA,qBAAKV,UAAU,SAAf,SAJW,mBAKX,sBAAKA,UAAU,YAAf,UACKb,KAAKwB,aAAa,GAClBxB,KAAKwB,aAAa,GAClBxB,KAAKwB,aAAa,MAEvB,sBAAKX,UAAU,YAAf,UACKb,KAAKwB,aAAa,GAClBxB,KAAKwB,aAAa,GAClBxB,KAAKwB,aAAa,MAEvB,sBAAKX,UAAU,YAAf,UACKb,KAAKwB,aAAa,GAClBxB,KAAKwB,aAAa,GAClBxB,KAAKwB,aAAa,a,GAxBfd,IAAMC,WA+BpBc,E,4JACF,WACI,OACA,sBAAKZ,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACA,cAAC,EAAD,MAEA,sBAAKA,UAAU,YAAf,UACA,wBACA,iC,GATOH,IAAMC,WAgBVc,IC/BAC,MAzBf,WACE,OACE,eAAC,IAAD,WACE,8BACE,eAACC,EAAA,EAAD,CAAKC,UAAU,IAAf,UACE,cAACD,EAAA,EAAIE,KAAL,UACE,cAACF,EAAA,EAAIG,KAAL,CAAUb,KAAK,IAAf,sBAEF,cAACU,EAAA,EAAIE,KAAL,UACE,cAACF,EAAA,EAAIG,KAAL,CAAUb,KAAK,UAAf,sBAEF,cAACU,EAAA,EAAIE,KAAL,UACE,cAACF,EAAA,EAAIG,KAAL,CAAUb,KAAK,QAAf,yBAIN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,KAAK,IAAIC,QAAS,cAACpB,EAAD,MACzB,cAAC,IAAD,CAAOmB,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,aCZvBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8cfc8ec5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nclass BarClock extends React.Component<{}, {time: Date}> {\r\n    interval: NodeJS.Timeout;\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = { time: new Date() };\r\n        this.interval = setInterval(() => this.setState({ time: new Date() }), 1000);\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        let currentHours = this.state.time.getHours();\r\n        let currentMins = this.state.time.getMinutes();\r\n        let currentSecs = this.state.time.getSeconds();\r\n        return(\r\n            <div>\r\n                <p>now</p>\r\n                <ProgressBar now={currentHours / 24 * 100} label={currentHours}></ProgressBar>\r\n                <ProgressBar now={currentMins / 60 * 100} label={currentMins}></ProgressBar>\r\n                <ProgressBar now={currentSecs / 60 * 100} label={currentSecs}></ProgressBar>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n}\r\n\r\nexport default BarClock;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nexport default function DefaultApp() {\r\n    return (\r\n        <div className=\"DefaultApp\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <p>\r\n              Edit <code>src/App.tsx</code> and save to reload.\r\n            </p>\r\n            <a\r\n              className=\"App-link\"\r\n              href=\"https://reactjs.org\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Learn React\r\n            </a>\r\n          </header>\r\n        </div>\r\n      );\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ntype SquareProps = {value: number}\r\ntype SqaureState = {}\r\n\r\nclass Square extends React.Component<SquareProps, SqaureState> {\r\n    render() {\r\n        return (\r\n            <button className=\"square\">\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n  \r\nclass Board extends React.Component {\r\n    renderSquare(i:number) {\r\n      return <Square value={i} />;  \r\n    }\r\n\r\n    render() {\r\n        const status = 'Next player: X';\r\n\r\n        return (\r\n            <div>\r\n            <div className=\"status\">{status}</div>\r\n            <div className=\"board-row\">\r\n                {this.renderSquare(0)}\r\n                {this.renderSquare(1)}\r\n                {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {this.renderSquare(3)}\r\n                {this.renderSquare(4)}\r\n                {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {this.renderSquare(6)}\r\n                {this.renderSquare(7)}\r\n                {this.renderSquare(8)}\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n            <Board />\r\n            </div>\r\n            <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport BarClock from './clock/BarClock';\nimport DefaultApp from './home/defaultApp';\nimport Game from './TicTacToe/TicTacToe';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Nav activeKey=\"/\">\n          <Nav.Item>\n            <Nav.Link href=\"/\">Active</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/clocks\">Clocks</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/Game\">Game</Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </div>\n      <Routes>\n        <Route path=\"/\" element={<DefaultApp />} />\n        <Route path=\"/clocks\" element={<BarClock />} />\n        <Route path=\"/games\" element={<Game />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}